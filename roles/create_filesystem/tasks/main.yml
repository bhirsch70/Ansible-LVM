---
# - name: Gather devices and populate a variable
#   shell: grep ^\/dev\/sd[bcdefgh] /etc/fstab.testing |awk '{print $1}'
#   register: devices
#
# - name: create a temp file that lists a device
#   shell: echo "{{ item }}" > /tmp/mydevice
#   with_items:
#     - "{{ devices }}"
#   when: "{{ devices.stdout.find('sdg') }}"
- name: ping hosts
  shell: ls /tmp

- name: print devices
  # debug: msg="I found the device "{{ ansible_devices }}""
  debug: var=hostvars[inventory_hostname] verbosity=4
  # hostvars['hostname']

#   shell: touch /tmp/"{{ item.key }}"
  # with_dict: "{{ ansible_devices }}"
  # register: new_dev


# - name: print devices in new place
#   shell: echo "{{ item }}" >> /tmp/new/output
#   with_items: "{{ new_dev.results.key }}"


# - name: Label new disk
#   command: parted -s -a optimal "{{ new_dev }}" mklabel gpt
#
# - name: Partition new disk
#   command: parted -s -a optimal "{{ new_dev }}" mkpart primary 0% 100%
#
# - name: Create Phyiscal Volume (PV) and extend Volume Group (VG)
#   command: vgextend {{ rhel7_vg }} {{ new_disk }}
#   #lvg:
#     #vg: "{{ rhel7_vg }}"
#     #pvs: "{{ new_disk }}"
#   when:
#     - ansible_distribution == "RedHat"
#     - ansible_distribution_major_version == "7"
#
# - name: Create Logical Volume (LV)
#   lvol:
#     vg: "{{ rhel7_vg }}"
#     lv: "{{ rhel_lv }}"
#     size: 100%FREE
#     state: present
#   when:
#     - ansible_distribution == "RedHat"
#     - ansible_distribution_major_version == "7"
#
# - name: Create File System
#   filesystem:
#     fstype: xfs
#     dev: "/dev/{{ rhel7_vg }}/{{ rhel_lv }}"
#   when:
#     - ansible_distribution == "RedHat"
#     - ansible_distribution_major_version == "7"
#
# - name: Mount new file System
#   mount:
#     name: /newfs
#     src: "/dev/mapper/{{ rhel7_vg }}-{{ rhel_lv }}"
#     fstype: xfs
#     opts: noatime,nodiratime
#     state: mounted
#   when:
#     - ansible_distribution == "RedHat"
#     - ansible_distribution_major_version == "7"
